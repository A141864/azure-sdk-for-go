// +build go1.9

// Copyright 2019 Microsoft Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/Azure/azure-sdk-for-go/tools/profileBuilder

package speechservices

import original "github.com/Azure/azure-sdk-for-go/services/cognitiveservices/v2.0/SpeechServices"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type DataImportKind = original.DataImportKind

const (
	Acoustic           DataImportKind = original.Acoustic
	CustomVoice        DataImportKind = original.CustomVoice
	Language           DataImportKind = original.Language
	LanguageGeneration DataImportKind = original.LanguageGeneration
	None               DataImportKind = original.None
	Pronunciation      DataImportKind = original.Pronunciation
)

type DataImportKind1 = original.DataImportKind1

const (
	DataImportKind1Acoustic           DataImportKind1 = original.DataImportKind1Acoustic
	DataImportKind1CustomVoice        DataImportKind1 = original.DataImportKind1CustomVoice
	DataImportKind1Language           DataImportKind1 = original.DataImportKind1Language
	DataImportKind1LanguageGeneration DataImportKind1 = original.DataImportKind1LanguageGeneration
	DataImportKind1None               DataImportKind1 = original.DataImportKind1None
	DataImportKind1Pronunciation      DataImportKind1 = original.DataImportKind1Pronunciation
)

type EndpointKind = original.EndpointKind

const (
	EndpointKindCustomVoice            EndpointKind = original.EndpointKindCustomVoice
	EndpointKindLanguageGeneration     EndpointKind = original.EndpointKindLanguageGeneration
	EndpointKindLanguageIdentification EndpointKind = original.EndpointKindLanguageIdentification
	EndpointKindNone                   EndpointKind = original.EndpointKindNone
	EndpointKindSpeechRecognition      EndpointKind = original.EndpointKindSpeechRecognition
)

type ModelKind = original.ModelKind

const (
	ModelKindAcoustic               ModelKind = original.ModelKindAcoustic
	ModelKindAcousticAndLanguage    ModelKind = original.ModelKindAcousticAndLanguage
	ModelKindCustomVoice            ModelKind = original.ModelKindCustomVoice
	ModelKindLanguage               ModelKind = original.ModelKindLanguage
	ModelKindLanguageGeneration     ModelKind = original.ModelKindLanguageGeneration
	ModelKindLanguageIdentification ModelKind = original.ModelKindLanguageIdentification
	ModelKindNone                   ModelKind = original.ModelKindNone
	ModelKindSentiment              ModelKind = original.ModelKindSentiment
)

type ModelKind1 = original.ModelKind1

const (
	ModelKind1Acoustic               ModelKind1 = original.ModelKind1Acoustic
	ModelKind1AcousticAndLanguage    ModelKind1 = original.ModelKind1AcousticAndLanguage
	ModelKind1CustomVoice            ModelKind1 = original.ModelKind1CustomVoice
	ModelKind1Language               ModelKind1 = original.ModelKind1Language
	ModelKind1LanguageGeneration     ModelKind1 = original.ModelKind1LanguageGeneration
	ModelKind1LanguageIdentification ModelKind1 = original.ModelKind1LanguageIdentification
	ModelKind1None                   ModelKind1 = original.ModelKind1None
	ModelKind1Sentiment              ModelKind1 = original.ModelKind1Sentiment
)

type ModelKind2 = original.ModelKind2

const (
	ModelKind2Acoustic               ModelKind2 = original.ModelKind2Acoustic
	ModelKind2AcousticAndLanguage    ModelKind2 = original.ModelKind2AcousticAndLanguage
	ModelKind2CustomVoice            ModelKind2 = original.ModelKind2CustomVoice
	ModelKind2Language               ModelKind2 = original.ModelKind2Language
	ModelKind2LanguageGeneration     ModelKind2 = original.ModelKind2LanguageGeneration
	ModelKind2LanguageIdentification ModelKind2 = original.ModelKind2LanguageIdentification
	ModelKind2None                   ModelKind2 = original.ModelKind2None
	ModelKind2Sentiment              ModelKind2 = original.ModelKind2Sentiment
)

type Status = original.Status

const (
	Failed     Status = original.Failed
	NotStarted Status = original.NotStarted
	Running    Status = original.Running
	Succeeded  Status = original.Succeeded
)

type Status1 = original.Status1

const (
	Status1Failed     Status1 = original.Status1Failed
	Status1NotStarted Status1 = original.Status1NotStarted
	Status1Running    Status1 = original.Status1Running
	Status1Succeeded  Status1 = original.Status1Succeeded
)

type Status2 = original.Status2

const (
	Status2Failed     Status2 = original.Status2Failed
	Status2NotStarted Status2 = original.Status2NotStarted
	Status2Running    Status2 = original.Status2Running
	Status2Succeeded  Status2 = original.Status2Succeeded
)

type Status3 = original.Status3

const (
	Status3Failed     Status3 = original.Status3Failed
	Status3NotStarted Status3 = original.Status3NotStarted
	Status3Running    Status3 = original.Status3Running
	Status3Succeeded  Status3 = original.Status3Succeeded
)

type Status4 = original.Status4

const (
	Status4Failed     Status4 = original.Status4Failed
	Status4NotStarted Status4 = original.Status4NotStarted
	Status4Running    Status4 = original.Status4Running
	Status4Succeeded  Status4 = original.Status4Succeeded
)

type Status5 = original.Status5

const (
	Status5Failed     Status5 = original.Status5Failed
	Status5NotStarted Status5 = original.Status5NotStarted
	Status5Running    Status5 = original.Status5Running
	Status5Succeeded  Status5 = original.Status5Succeeded
)

type Status6 = original.Status6

const (
	Error   Status6 = original.Error
	Healthy Status6 = original.Healthy
	Sick    Status6 = original.Sick
)

type Status7 = original.Status7

const (
	Status7Error   Status7 = original.Status7Error
	Status7Healthy Status7 = original.Status7Healthy
	Status7Sick    Status7 = original.Status7Sick
)

type Status8 = original.Status8

const (
	Status8Failed     Status8 = original.Status8Failed
	Status8NotStarted Status8 = original.Status8NotStarted
	Status8Running    Status8 = original.Status8Running
	Status8Succeeded  Status8 = original.Status8Succeeded
)

type VoiceTestKind = original.VoiceTestKind

const (
	VoiceTestKindNone VoiceTestKind = original.VoiceTestKindNone
	VoiceTestKindSSML VoiceTestKind = original.VoiceTestKindSSML
	VoiceTestKindText VoiceTestKind = original.VoiceTestKindText
)

type VoiceTestKind1 = original.VoiceTestKind1

const (
	VoiceTestKind1None VoiceTestKind1 = original.VoiceTestKind1None
	VoiceTestKind1SSML VoiceTestKind1 = original.VoiceTestKind1SSML
	VoiceTestKind1Text VoiceTestKind1 = original.VoiceTestKind1Text
)

type BaseClient = original.BaseClient
type Component = original.Component
type Dataset = original.Dataset
type DatasetDefinition = original.DatasetDefinition
type DatasetIdentity = original.DatasetIdentity
type DatasetUpdate = original.DatasetUpdate
type Endpoint = original.Endpoint
type EndpointData = original.EndpointData
type EndpointDataDefinition = original.EndpointDataDefinition
type EndpointDefinition = original.EndpointDefinition
type EndpointUpdate = original.EndpointUpdate
type ErrorContent = original.ErrorContent
type ErrorDetail = original.ErrorDetail
type GetSupportedLocalesForDatasetsOKResponse = original.GetSupportedLocalesForDatasetsOKResponse
type GetSupportedLocalesForModelsOKResponse = original.GetSupportedLocalesForModelsOKResponse
type HealthStatusResponse = original.HealthStatusResponse
type InnerError = original.InnerError
type Model = original.Model
type ModelDefinition = original.ModelDefinition
type ModelIdentity = original.ModelIdentity
type ModelUpdate = original.ModelUpdate
type SetObject = original.SetObject
type SpeechEndpointDefinition = original.SpeechEndpointDefinition
type SpeechModelDefinition = original.SpeechModelDefinition
type Test = original.Test
type TestDefinition = original.TestDefinition
type TestUpdate = original.TestUpdate
type Transcription = original.Transcription
type TranscriptionDefinition = original.TranscriptionDefinition
type TranscriptionUpdate = original.TranscriptionUpdate
type VoiceTest = original.VoiceTest
type VoiceTestDefinition = original.VoiceTestDefinition
type WebHookConfigurationSecret = original.WebHookConfigurationSecret
type WebHookUpdate = original.WebHookUpdate

func New() BaseClient {
	return original.New()
}
func NewWithBaseURI(baseURI string) BaseClient {
	return original.NewWithBaseURI(baseURI)
}
func PossibleDataImportKind1Values() []DataImportKind1 {
	return original.PossibleDataImportKind1Values()
}
func PossibleDataImportKindValues() []DataImportKind {
	return original.PossibleDataImportKindValues()
}
func PossibleEndpointKindValues() []EndpointKind {
	return original.PossibleEndpointKindValues()
}
func PossibleModelKind1Values() []ModelKind1 {
	return original.PossibleModelKind1Values()
}
func PossibleModelKind2Values() []ModelKind2 {
	return original.PossibleModelKind2Values()
}
func PossibleModelKindValues() []ModelKind {
	return original.PossibleModelKindValues()
}
func PossibleStatus1Values() []Status1 {
	return original.PossibleStatus1Values()
}
func PossibleStatus2Values() []Status2 {
	return original.PossibleStatus2Values()
}
func PossibleStatus3Values() []Status3 {
	return original.PossibleStatus3Values()
}
func PossibleStatus4Values() []Status4 {
	return original.PossibleStatus4Values()
}
func PossibleStatus5Values() []Status5 {
	return original.PossibleStatus5Values()
}
func PossibleStatus6Values() []Status6 {
	return original.PossibleStatus6Values()
}
func PossibleStatus7Values() []Status7 {
	return original.PossibleStatus7Values()
}
func PossibleStatus8Values() []Status8 {
	return original.PossibleStatus8Values()
}
func PossibleStatusValues() []Status {
	return original.PossibleStatusValues()
}
func PossibleVoiceTestKind1Values() []VoiceTestKind1 {
	return original.PossibleVoiceTestKind1Values()
}
func PossibleVoiceTestKindValues() []VoiceTestKind {
	return original.PossibleVoiceTestKindValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/preview"
}
func Version() string {
	return original.Version()
}
